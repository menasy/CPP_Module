/*
 ‚ñà‚ñà‚ñà‚ñÑ ‚ñÑ‚ñà‚ñà‚ñà‚ñì‚ñì‚ñà‚ñà‚ñà‚ñà‚ñà  ‚ñà‚ñà‚ñà‚ñÑ    ‚ñà  ‚ñÑ‚ñÑ‚ñÑ        ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñì‚ñà‚ñà   ‚ñà‚ñà‚ñì
‚ñì‚ñà‚ñà‚ñí‚ñÄ‚ñà‚ñÄ ‚ñà‚ñà‚ñí‚ñì‚ñà   ‚ñÄ  ‚ñà‚ñà ‚ñÄ‚ñà   ‚ñà ‚ñí‚ñà‚ñà‚ñà‚ñà‚ñÑ    ‚ñí‚ñà‚ñà    ‚ñí ‚ñí‚ñà‚ñà  ‚ñà‚ñà‚ñí
‚ñì‚ñà‚ñà    ‚ñì‚ñà‚ñà‚ñë‚ñí‚ñà‚ñà‚ñà   ‚ñì‚ñà‚ñà  ‚ñÄ‚ñà ‚ñà‚ñà‚ñí‚ñí‚ñà‚ñà  ‚ñÄ‚ñà‚ñÑ  ‚ñë ‚ñì‚ñà‚ñà‚ñÑ    ‚ñí‚ñà‚ñà ‚ñà‚ñà‚ñë
‚ñí‚ñà‚ñà    ‚ñí‚ñà‚ñà ‚ñí‚ñì‚ñà  ‚ñÑ ‚ñì‚ñà‚ñà‚ñí  ‚ñê‚ñå‚ñà‚ñà‚ñí‚ñë‚ñà‚ñà‚ñÑ‚ñÑ‚ñÑ‚ñÑ‚ñà‚ñà   ‚ñí   ‚ñà‚ñà‚ñí ‚ñë ‚ñê‚ñà‚ñà‚ñì‚ñë
‚ñí‚ñà‚ñà‚ñí   ‚ñë‚ñà‚ñà‚ñí‚ñë‚ñí‚ñà‚ñà‚ñà‚ñà‚ñí‚ñí‚ñà‚ñà‚ñë   ‚ñì‚ñà‚ñà‚ñë ‚ñì‚ñà   ‚ñì‚ñà‚ñà‚ñí‚ñí‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñí‚ñí ‚ñë ‚ñà‚ñà‚ñí‚ñì‚ñë
‚ñë ‚ñí‚ñë   ‚ñë  ‚ñë‚ñë‚ñë ‚ñí‚ñë ‚ñë‚ñë ‚ñí‚ñë   ‚ñí ‚ñí  ‚ñí‚ñí   ‚ñì‚ñí‚ñà‚ñë‚ñí ‚ñí‚ñì‚ñí ‚ñí ‚ñë  ‚ñà‚ñà‚ñí‚ñí‚ñí
‚ñë  ‚ñë      ‚ñë ‚ñë ‚ñë  ‚ñë‚ñë ‚ñë‚ñë   ‚ñë ‚ñí‚ñë  ‚ñí   ‚ñí‚ñí ‚ñë‚ñë ‚ñë‚ñí  ‚ñë ‚ñë‚ñì‚ñà‚ñà ‚ñë‚ñí‚ñë
‚ñë      ‚ñë      ‚ñë      ‚ñë   ‚ñë ‚ñë   ‚ñë   ‚ñí   ‚ñë  ‚ñë  ‚ñë  ‚ñí ‚ñí ‚ñë‚ñë
       ‚ñë      ‚ñë  ‚ñë         ‚ñë       ‚ñë  ‚ñë      ‚ñë  ‚ñë ‚ñë
                                                ‚ñë ‚ñë*/

#include "FragTrap.hpp"

FragTrap::FragTrap() 
{
    std::cout<<"FragTrap Default Constructor Called"<<std::endl;
    this->hitPoints = 100;
    this->energyPoints = 100;
    this->attackDamage = 30;   
}

FragTrap::~FragTrap()
{
    std::cout<<"FragTrap Destructor Called"<<std::endl; 
        
}

FragTrap::FragTrap(std::string newName) : ClapTrap::ClapTrap(newName)
{
    std::cout<<"FragTrap Name Constructor Called"<<std::endl;
    this->name = newName;
    this->hitPoints = 100;
    this->energyPoints = 100;
    this->attackDamage = 30;   
}

FragTrap::FragTrap(const FragTrap& object) : ClapTrap(object)
{
   std::cout<<"FragTrap Copy Constructor Called"<<std::endl;
    *this = object;     
}

FragTrap& FragTrap::operator=(const FragTrap& object)
{
     std::cout<<"FragTrap Copy Assigment Called"<<std::endl;
    if (this == &object)
        return (*this);
    this->hitPoints = object.hitPoints;
    this->attackDamage = object.attackDamage;
    this->energyPoints = object.energyPoints;
    this->name = object.name;
    return(*this);
}

void FragTrap::attack(const std::string& target)
{
	    if (this->energyPoints != 0 && this->hitPoints != 0)
    {
         std::cout<<"FragTrap "<< this->name << " attacks " << target 
            << " causing " << this->attackDamage << " points of damage!" << std::endl;
        this->energyPoints--;
    }
    else
        std::cout << "FragTrap " << this->name << " can't attack!" << std::endl;
    this->showInfos("FragTrap");
}

void FragTrap::highFivesGuys(void)
{
    std::cout << "FragTrap " << this->getName() 
              << " says: \"High five, team! Let's celebrate with an epic victory clap! ‚úãü§ñ\"" << std::endl;
}


